<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 
 
 
     <!-- 使用外部的配置文件 -->
	<context:property-placeholder location="classpath*:jdbc.properties" />
    <!--<context:property-placeholder location="file:F:/project/transfer_server/code/transfer-api-http/src/main/resources/jdbc.properties, file:F:/project/transfer_server/code/transfer-api-http/src/main/resources/dubbo.properties" />-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>

		<!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
		<property name="validationQuery" value="select 1" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="true" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="100" />
		<property name="filters" value="config,stat" />
		<property name="connectionProperties" value="${mysql_passwd_decrypt}" />
	</bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations">
            <list>
<!--                 <value>classpath*:com/ds/money/entity/*Mapper.xml</value> -->
<!--                 <value>classpath*:com/ds/money/entity/*Dao.xml</value> -->
            </list>
        </property>
    </bean>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="20" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="100000" />
		<property name="keepAliveSeconds" value="600" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />
		</property>
	</bean>

	<!-- 扫描 UserMapper.java-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	    <property name="basePackage" value="com.ds.transfer" />   
	</bean>
    
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource" />   
    </bean>
    
    <context:component-scan base-package="com.ds.transfer"></context:component-scan>
       <!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->

    <!-- 事务放在dubbo服务里,不然会导致死锁  -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
    
    <!-- redis config start-->
    <task:annotation-driven scheduler="taskScheduler" executor="taskExecutor" mode="proxy" />
    <task:scheduler id="taskScheduler" pool-size="10" />	
    <task:executor id="taskExecutor" pool-size="10" />
      
</beans>
